Є два способи запобігти діям браузера:

Основний спосіб – це використовувати об’єкт event. Існує метод event.preventDefault().
Якщо обробник призначено за допомогою on<event> (а не addEventListener), повернення false спрацює так само.


Необов’язковий параметр passive: true для addEventListener сигналізує браузеру, що обробник не збирається викликати preventDefault().

Чому це може знадобитися?

На мобільних пристроях є деякі події, наприклад touchmove (коли користувач переміщує палець по екрану), які типово викликають прокручування, але цьому прокручуванню можна запобігти за допомогою preventDefault() в обробнику.

Тому, коли браузер виявляє таку подію, він повинен спочатку опрацювати всі обробники, а потім, якщо preventDefault ніде не викликано, він може продовжити прокручування. Це може призвести до непотрібних затримок та миготіння в інтерфейсі користувача.

Параметр passive: true повідомляє браузеру, що обробник не збирається скасовувати прокручування. Тоді браузер відразу прокручує його, забезпечуючи максимально плавний користувацький досвід, попутно обробляючи подію.

Для деяких браузерів (Firefox, Chrome) параметр passive має типове значення true для таких подій як touchstart або touchmove.

Існує багато типових дій браузера:

mousedown – розпочинає виділення (якщо перемістити курсор).
click на <input type="checkbox"> – додає/знімає прапорець з input.
submit – браузер надсилає форму на сервер після кліку на <input type="submit"> або натискання Enter всередині поля форми.
keydown – натискання клавіші може призвести до додавання символу в поле або інших дій.
contextmenu – подія відбувається при правому кліку та полягає в тому, щоб показати контекстне меню браузера.